{"version":3,"sources":["Components/Card.module.css","Components/Label.module.css","Images/pomodoroTimer.png","Images/quoteMachine.png","Images/markdownPreviewer.png","Images/jsCalculator.png","Images/techDocPage.png","Images/translationPractice.png","Images/todoTimers.png","Images/10for20challenge.png","Images/kurikaTasks.png","Components/Components.tsx","data/techColors.ts","Components/Label.tsx","Components/Card.tsx","Components/projectSection.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","projectCard","info","title","tech","description","linkIcon","label","__webpack_require__","p","Navbar","react_default","a","createElement","id","role","href","className","target","rel","index_es","icon","faLinkedin","faGithubSquare","faTwitterSquare","Welcome","techColors","Map","Label","props","text","styles","style","backgroundColor","colors","get","Card","_React$PureComponent","Object","inherits","_super","createSuper","classCallCheck","this","apply","arguments","createClass","key","value","project","tabIndex","backgroundImage","concat","image","Info","details","React","PureComponent","map","Links","view","codepen","github","faGlobe","faGithub","faCodepen","images","pomoImage","quoteImage","mdPrevImage","jsCalcImage","techDocPageImage","translationImage","todoTimers","challenge10for20","kurikaTasks","ProjectSection","_React$Component","projects","item","Card_Card","assign","Component","App","projectSection_ProjectSection","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2EACAA,EAAAC,QAAA,CAAkBC,YAAA,0BAAAC,KAAA,mBAAAC,MAAA,oBAAAC,KAAA,mBAAAC,YAAA,0BAAAC,SAAA,o2ECAlBP,EAAAC,QAAA,CAAkBO,MAAA,wCCDlBR,EAAAC,QAAiBQ,EAAAC,EAAuB,2DCAxCV,EAAAC,QAAiBQ,EAAAC,EAAuB,0DCAxCV,EAAAC,QAAiBQ,EAAAC,EAAuB,+DCAxCV,EAAAC,QAAiBQ,EAAAC,EAAuB,0DCAxCV,EAAAC,QAAiBQ,EAAAC,EAAuB,yDCAxCV,EAAAC,QAAiBQ,EAAAC,EAAuB,iECAxCV,EAAAC,QAAiBQ,EAAAC,EAAuB,wDCAxCV,EAAAC,QAAiBQ,EAAAC,EAAuB,8DCAxCV,EAAAC,QAAiBQ,EAAAC,EAAuB,mNCIjC,SAASC,IACd,OACEC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,YACNH,EAAAC,EAAAC,cAAA,MAAIE,KAAK,aAAaD,GAAG,aACvBH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,mBAAmBF,GAAG,aAA9B,mBACGH,EAAAC,EAAAC,cAAA,UACHF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,YAAYF,GAAG,UAAvB,cAGJH,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACfN,EAAAC,EAAAC,cAAA,MAAIC,GAAG,WACLH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,kCAAkCF,GAAG,wBAAwBG,UAAU,eAC7EC,OAAO,SAASC,IAAI,uBAClBR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAiBC,KAAMC,QAG7BX,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,6BAA6BF,GAAG,sBAAsBG,UAAU,eACtEC,OAAO,SAASC,IAAI,uBAClBR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAiBC,KAAME,QAG7BZ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,8BAA8BF,GAAG,uBAAuBG,UAAU,eACxEC,OAAO,SAASC,IAAI,uBAClBR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAiBC,KAAMG,UAQ9B,SAASC,IACd,OACEd,EAAAC,EAAAC,cAAA,UAAQC,GAAG,mBACTH,EAAAC,EAAAC,cAAA,MAAIC,GAAG,gBACLH,EAAAC,EAAAC,cAAA,QAAMC,GAAG,cAAT,OACAH,EAAAC,EAAAC,cAAA,QAAMC,GAAG,UAAT,cACAH,EAAAC,EAAAC,cAAA,QAAMC,GAAG,aAAT,6FC7COY,EAAA,IAAIC,IAAI,CACrB,CAAC,QAAS,WACV,CAAC,UAAW,WACZ,CAAC,aAAc,WACf,CAAC,QAAS,WACV,CAAC,OAAQ,WACT,CAAC,aAAc,WACf,CAAC,YAAa,aCCT,SAASC,EAAMC,GAAc,IAC3BC,EAAQD,EAARC,KAEP,OACEnB,EAAAC,EAAAC,cAAA,QAAMI,UAAWc,IAAOxB,MAAOyB,MAAO,CAACC,gBAAiBC,EAAOC,IAAIL,KAChEA,uBCIMM,EAAb,SAAAC,GAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAAC,GAAA,IAAAG,EAAAF,OAAAG,EAAA,EAAAH,CAAAF,GAAA,SAAAA,IAAA,OAAAE,OAAAI,EAAA,EAAAJ,CAAAK,KAAAP,GAAAI,EAAAI,MAAAD,KAAAE,WAAA,OAAAP,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAEE,IAAMC,EAAUN,KAAKd,MACrB,OACClB,EAAAC,EAAAC,cAAA,OAAKI,UAAWc,IAAO9B,YACtBiD,SAAU,EACVlB,MAAO,CAACmB,gBAAe,QAAAC,OAAUH,EAAQI,MAAlB,QAExB1C,EAAAC,EAAAC,cAACyC,EAAD,CAAMC,QAASN,SARlBb,EAAA,CAA0BoB,IAAMC,eAchC,SAASH,EAAKzB,GAAwB,IAC7B0B,EAAY1B,EAAZ0B,QACR,OACC5C,EAAAC,EAAAC,cAAA,OAAKI,UAAWc,IAAO7B,MACtBS,EAAAC,EAAAC,cAAA,MAAII,UAAWc,IAAO5B,OAAQoD,EAAQpD,OACtCQ,EAAAC,EAAAC,cAAA,OAAKI,UAAWc,IAAO3B,MACrBmD,EAAQnD,KAAKsD,IAAI,SAACtD,GAAD,OACjBO,EAAAC,EAAAC,cAACe,EAAD,CAAOE,KAAM1B,OAGfO,EAAAC,EAAAC,cAAA,QAAMI,UAAWc,IAAO1B,aAAckD,EAAQlD,aAC9CM,EAAAC,EAAAC,cAAC8C,EAAD,CAAOC,KAAML,EAAQK,KAAMC,QAASN,EAAQM,QAASC,OAAQP,EAAQO,UAKxE,SAASH,EAAM9B,GACd,OACClB,EAAAC,EAAAC,cAAA,WACEgB,EAAM+B,MACNjD,EAAAC,EAAAC,cAAA,KAAGG,KAAMa,EAAM+B,KAAM3C,UAAWc,IAAOzB,SAAUH,MAAM,eACtDQ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAiBC,KAAM0C,OAGxBlC,EAAMiC,QACNnD,EAAAC,EAAAC,cAAA,KAAGG,KAAMa,EAAMiC,OAAQ7C,UAAWc,IAAOzB,SAAUH,MAAM,uBACxDQ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAiBC,KAAM2C,OAGxBnC,EAAMgC,SACNlD,EAAAC,EAAAC,cAAA,KAAGG,KAAMa,EAAMgC,QAAS5C,UAAWc,IAAOzB,SAAUH,MAAM,iCACzDQ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAiBC,KAAM4C,qKChDtBC,EAAS,CACbC,cACAC,eACAC,gBACAC,gBACAC,qBACAC,qBACAC,eACAC,qBACAC,iBAGWC,EAAb,SAAAC,GAAAvC,OAAAC,EAAA,EAAAD,CAAAsC,EAAAC,GAAA,IAAArC,EAAAF,OAAAG,EAAA,EAAAH,CAAAsC,GAAA,SAAAA,IAAA,OAAAtC,OAAAI,EAAA,EAAAJ,CAAAK,KAAAiC,GAAApC,EAAAI,MAAAD,KAAAE,WAAA,OAAAP,OAAAQ,EAAA,EAAAR,CAAAsC,EAAA,EAAA7B,IAAA,SAAAC,MAAA,WAEI,OACErC,EAAAC,EAAAC,cAAA,WAASC,GAAG,YACVH,EAAAC,EAAAC,cAAA,MAAII,UAAU,UAAd,YACAN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACZ6D,EAASpB,IAAI,SAAAqB,GAEZ,OADAA,EAAK1B,MAAQa,EAAOa,EAAK1B,OACjB1C,EAAAC,EAAAC,cAACmE,EAAD1C,OAAA2C,OAAA,CAAMlC,IAAKgC,EAAK5E,OAAW4E,YAR/CH,EAAA,CAAoCpB,IAAM0B,WCV3BC,SAXO,WACpB,OACExE,EAAAC,EAAAC,cAAA,WAASC,GAAG,qBACVH,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAACY,EAAD,MAEAd,EAAAC,EAAAC,cAACuE,EAAD,SCCcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhF,EAAAC,EAAAC,cAAC+E,EAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ed707959.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectCard\":\"Card_projectCard__3yABw\",\"info\":\"Card_info__21wIh\",\"title\":\"Card_title__3OYlE\",\"tech\":\"Card_tech__1Gsu4\",\"description\":\"Card_description__3mOEV\",\"linkIcon\":\"Card_linkIcon__1CSJr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Label_label__2Q9Mt\"};","module.exports = __webpack_public_path__ + \"static/media/pomodoroTimer.d857f111.png\";","module.exports = __webpack_public_path__ + \"static/media/quoteMachine.6879cb7f.png\";","module.exports = __webpack_public_path__ + \"static/media/markdownPreviewer.74661f1f.png\";","module.exports = __webpack_public_path__ + \"static/media/jsCalculator.fdbe6ed2.png\";","module.exports = __webpack_public_path__ + \"static/media/techDocPage.00857240.png\";","module.exports = __webpack_public_path__ + \"static/media/translationPractice.ee180aee.png\";","module.exports = __webpack_public_path__ + \"static/media/todoTimers.814fb739.png\";","module.exports = __webpack_public_path__ + \"static/media/10for20challenge.ee8b8c17.png\";","module.exports = __webpack_public_path__ + \"static/media/kurikaTasks.5c8574ed.png\";","import React from 'react'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faLinkedin, faGithubSquare, faTwitterSquare} from '@fortawesome/free-brands-svg-icons'\r\n\r\nexport function Navbar(){\r\n  return(\r\n    <nav id=\"main-nav\">\r\n      <ul role=\"navigation\" id=\"nav-links\">\r\n        <li>\r\n          <a href=\"#welcome-section\" id=\"a-welcome\">Emily&nbsp;Gagne</a>\r\n        </li><li>\r\n          <a href=\"#projects\" id=\"a-proj\">Projects</a>\r\n        </li>\r\n      </ul>\r\n      <div className=\"flex-grow\" />\r\n      <ul id=\"connect\">\r\n        <li>\r\n          <a href=\"https://linkedin.com/in/ceg9498\" id=\"linkedin-profile-link\" className=\"profile-link\"\r\n            target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <FontAwesomeIcon icon={faLinkedin} />\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"https://github.com/ceg9498\" id=\"github-profile-link\" className=\"profile-link\"\r\n            target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <FontAwesomeIcon icon={faGithubSquare} />\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"https://twitter.com/ceg9498\" id=\"twitter-profile-link\" className=\"profile-link\"\r\n            target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <FontAwesomeIcon icon={faTwitterSquare} />\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport function Welcome(){\r\n  return(\r\n    <header id=\"welcome-section\">\r\n      <h1 id=\"welcome-grid\">\r\n        <span id=\"w-greeting\">Hi!</span>\r\n        <span id=\"w-name\">I'm Emily.</span>\r\n        <span id=\"w-tagline\">It's nice to meet you.</span>\r\n      </h1>\r\n    </header>\r\n  );\r\n}\r\n","export default new Map([\r\n  [\"React\", \"#61dafb\"],\r\n  [\"Angular\", \"#ff7593\"],\r\n  [\"TypeScript\", \"#ffd280\"],\r\n  [\"D3.js\", \"#f7a07e\"],\r\n  [\"Sass\", \"#bf4080\"],\r\n  [\"MaterialUI\", \"#64a8ed\"],\r\n  [\"Bootstrap\", \"#cbbde2\"],\r\n])\r\n","import React from 'react'\r\nimport styles from './Label.module.css'\r\nimport colors from '../data/techColors'\r\n\r\ninterface Props {\r\n  text: string,\r\n}\r\n\r\nexport function Label(props: Props) {\r\n  const {text} = props\r\n\r\n  return(\r\n    <span className={styles.label} style={{backgroundColor: colors.get(text)}}>\r\n      {text}\r\n    </span>\r\n  )\r\n}","import React from 'react'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faGlobe} from '@fortawesome/free-solid-svg-icons'\r\nimport {faGithub, faCodepen} from '@fortawesome/free-brands-svg-icons'\r\nimport {Label} from './Label'\r\nimport styles from './Card.module.css'\r\n\r\ninterface Props {\r\n\timage: string,\r\n\ttitle: string,\r\n\tdescription: string,\r\n\ttech: string[],\r\n\tview: string,\r\n\tcodepen: string,\r\n\tgithub: string,\r\n}\r\n\r\nexport class Card extends React.PureComponent<Props> {\r\n\trender(){\r\n\t\tconst project = this.props\r\n\t\treturn(\r\n\t\t\t<div className={styles.projectCard}\r\n\t\t\t\ttabIndex={1}\r\n\t\t\t\tstyle={{backgroundImage: `url('${project.image}')`}}\r\n\t\t\t>\r\n\t\t\t<Info details={project} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction Info(props: {details: Props}){\r\n\tconst { details } = props;\r\n\treturn(\r\n\t\t<div className={styles.info}>\r\n\t\t <h3 className={styles.title}>{details.title}</h3>\r\n\t\t <div className={styles.tech}>\r\n\t\t\t {details.tech.map((tech)=>\r\n\t\t\t\t <Label text={tech} />\r\n\t\t\t )}\r\n\t\t </div>\r\n\t\t <span className={styles.description}>{details.description}</span>\r\n\t\t\t<Links view={details.view} codepen={details.codepen} github={details.github} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction Links(props: {view: string, codepen: string, github: string}) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{props.view &&\r\n\t\t\t\t<a href={props.view} className={styles.linkIcon} title=\"View sample\">\r\n\t\t\t\t\t<FontAwesomeIcon icon={faGlobe} />\r\n\t\t\t\t</a>\r\n\t\t\t}\r\n\t\t\t{props.github &&\r\n\t\t\t\t<a href={props.github} className={styles.linkIcon} title=\"View code on Github\">\r\n\t\t\t\t\t<FontAwesomeIcon icon={faGithub} />\r\n\t\t\t\t</a>\r\n\t\t\t}\r\n\t\t\t{props.codepen &&\r\n\t\t\t\t<a href={props.codepen} className={styles.linkIcon} title=\"View sample &amp; code on Codepen\">\r\n\t\t\t\t\t<FontAwesomeIcon icon={faCodepen} />\r\n\t\t\t\t</a>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport projects from '../data/projects.json'\r\nimport {Card} from './Card'\r\n\r\nimport pomoImage from '../Images/pomodoroTimer.png'\r\nimport quoteImage from '../Images/quoteMachine.png'\r\nimport mdPrevImage from '../Images/markdownPreviewer.png'\r\nimport jsCalcImage from '../Images/jsCalculator.png'\r\nimport techDocPageImage from '../Images/techDocPage.png'\r\nimport translationImage from '../Images/translationPractice.png'\r\nimport todoTimers from '../Images/todoTimers.png'\r\nimport challenge10for20 from '../Images/10for20challenge.png'\r\nimport kurikaTasks from '../Images/kurikaTasks.png'\r\n\r\nconst images = {\r\n  pomoImage,\r\n  quoteImage,\r\n  mdPrevImage,\r\n  jsCalcImage,\r\n  techDocPageImage,\r\n  translationImage,\r\n  todoTimers,\r\n  challenge10for20,\r\n  kurikaTasks,\r\n}\r\n\r\nexport class ProjectSection extends React.Component<any,any>{\r\n  render(){\r\n    return(\r\n      <section id=\"projects\">\r\n        <h2 className=\"hidden\">Projects</h2>\r\n        <div className=\"proj-flex\">\r\n          {projects.map(item => {\r\n            item.image = images[item.image]\r\n            return (<Card key={item.title} {...item} />)\r\n          })}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Navbar, Welcome } from './Components/Components'\r\nimport { ProjectSection } from './Components/projectSection'\r\nimport './App.scss';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <article id=\"portfolio-article\">\r\n      <Navbar />\r\n      <Welcome />\r\n\r\n      <ProjectSection />\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}